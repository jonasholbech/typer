{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Typer.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Typer from \"./components/Typer.svelte\";\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<main>\n  <h1>SpeedTyper</h1>\n  <Typer />\n</main>\n",
    "<script>\n  import { words } from \"../stores/words\";\n  import { score } from \"../stores/score\";\n  import { timer } from \"../stores/timer\";\n  let typed = \"\";\n  let lastValue = \"\";\n  let correct = false;\n  let running = false;\n\n  function checkAnswer() {\n    if (typed === $words[$score]) {\n      score.update(n => n + 1);\n      correct = true;\n      lastValue = typed;\n      typed = \"\";\n      if ($score >= $words.length) {\n        timer.stop();\n        running = false;\n      }\n    }\n  }\n  function transitionEnded() {\n    correct = false;\n    lastValue = \"\";\n  }\n  function init(el) {\n    el.focus();\n  }\n</script>\n\n<style>\n  div {\n    display: grid;\n\n    align-items: center;\n    height: 60px;\n  }\n  input,\n  p {\n    grid-column: 1;\n    grid-row: 1;\n    background: transparent;\n  }\n  p {\n    text-align: left;\n    font-family: inherit;\n    font-size: inherit;\n    -webkit-padding: 0.4em 0;\n    padding: 0.4em;\n    margin: 0 0 0.5em 0;\n  }\n  p.moveOut {\n    transition: 0.6s;\n    transform: translateX(100vw);\n  }\n</style>\n\n<h1>Write:</h1>\n<h2>{$words[$score] ? $words[$score] : 'Completed!!!!'}</h2>\n<h3>{$timer}</h3>\n<div>\n  {#if !running}\n    <button\n      on:click={() => {\n        running = true;\n        timer.start();\n      }}>\n      Start Typer\n    </button>\n  {/if}\n  {#if running}\n    <p on:transitionend={transitionEnded} class={correct ? 'moveOut' : ''}>\n      {lastValue}\n    </p>\n    <input use:init bind:value={typed} on:input={checkAnswer} type=\"text\" />\n  {/if}\n\n</div>\n"
  ],
  "names": [],
  "mappings": "AAKE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC;ACQD,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CAEb,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,AACd,CAAC,AACD,mBAAK,CACL,CAAC,cAAC,CAAC,AACD,WAAW,CAAE,CAAC,CACd,QAAQ,CAAE,CAAC,CACX,UAAU,CAAE,WAAW,AACzB,CAAC,AACD,CAAC,cAAC,CAAC,AACD,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,OAAO,CACpB,SAAS,CAAE,OAAO,CAClB,eAAe,CAAE,KAAK,CAAC,CAAC,CACxB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,AACrB,CAAC,AACD,CAAC,QAAQ,cAAC,CAAC,AACT,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,WAAW,KAAK,CAAC,AAC9B,CAAC"
}